// ---------------------------------------------------------------
// PADDING
// ---------------------------------------------------------------

// configuração de tamanhos ou variações
$padding: (
    0: 0,
    2: 2px,
    5: 5px,
    10: 10px,
    15: 15px,
    20: 20px,
    25: 25px,
    30: 30px,
    35: 35px,
    40: 40px,
    50: 50px,
    60: 60px,
    70: 70px,
);

// mixin
@function p( $key, $map : $padding ){
    @return map-get($map, $key);
}

@mixin p($item) { padding: p($item); }

// gera as classes
@each $scaleKey, $scaleValue in $padding {
    .pd-#{$scaleKey}{ padding: $scaleValue; }
    .pdt-#{$scaleKey}{ padding-top: $scaleValue; }
    .pdl-#{$scaleKey}{ padding-left: $scaleValue; }
    .pdb-#{$scaleKey}{ padding-bottom: $scaleValue; }
    .pdr-#{$scaleKey}{ padding-right: $scaleValue; }
}
    
@each $bkKey, $bkValue in $breakpoints {
    @if($bkValue != 0){
        @media (min-width: $bkValue) {
                @each $scaleKey, $scaleValue in $padding {
                @include ddScale( 'pd-', $bkKey, $scaleKey){ padding: $scaleValue; }
                @include ddScale( 'pdt-', $bkKey, $scaleKey){ padding-top: $scaleValue; }
                @include ddScale( 'pdl-', $bkKey, $scaleKey){ padding-left: $scaleValue; }
                @include ddScale( 'pdb-', $bkKey, $scaleKey){ padding-bottom: $scaleValue; }
                @include ddScale( 'pdr-', $bkKey, $scaleKey){ padding-right: $scaleValue; }
            }
        }
    }
}